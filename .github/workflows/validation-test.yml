name: AAQ Urgency Detection Validation
on:
  push:
    branches:
      - 'PNC_728-load-secrets'
    paths-ignore:
      - '**/*.md'

jobs:
  ValidateModels:
    runs-on: ubuntu-20.04
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # --------------- Comment out if using Github Actions Secrets ----------------- #
      - name: Get AWS secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |  # Replace ARNs with your own
            UD, arn:aws:secretsmanager:af-south-1:678681925278:secret:aaq-template-ud-secrets-KQ82bP
            GLOBAL, arn:aws:secretsmanager:af-south-1:678681925278:secret:aaq-template-global-secrets-HEQCSO
            GH, arn:aws:secretsmanager:af-south-1:678681925278:secret:github_machine_user_token-YPuBjA
          parse-json-secrets: true

      - name: Install libraries
        run: |
          pip install -r requirements.txt
          pip install -r requirements_github_actions.txt
          nltkdownload=`cat <<EOF
          import nltk
          nltk.download('stopwords')
          nltk.download('punkt')
          EOF`
          python -c "$nltkdownload"
          pip install git+https://${{ env.GH_TOKEN_MACHINE_USER }}@github.com/IDinsight/faqt.git@v1.0.2
      - name: Run Unit Tests
        env:
          PG_ENDPOINT: ${{env.GLOBAL_PG_ENDPOINT}}
          PG_PASSWORD: ${{env.GLOBAL_PG_PASSWORD}}
          UD_INBOUND_CHECK_TOKEN: ${{env.UD_UD_INBOUND_CHECK_TOKEN}}
          PROMETHEUS_MULTIPROC_DIR: /tmp
        run: |
          coverage run -m pytest tests --durations=0
          coverage lcov --include="core_model/*"
      - name: Run Validation Test
        env:
          VALIDATION_BUCKET: ${{env.GLOBAL_VALIDATION_BUCKET}}
          REPO: ${{ github.repository }}
          BRANCH: ${{steps.vars.outputs.branch}}
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
          PROMETHEUS_MULTIPROC_DIR: /tmp
          PG_ENDPOINT: ${{env.GLOBAL_PG_ENDPOINT}}
          PG_PASSWORD: ${{env.GLOBAL_PG_PASSWORD}}
          UD_INBOUND_CHECK_TOKEN: ${{env.UD_UD_INBOUND_CHECK_TOKEN}}
        if: "${{(env.VALIDATION_BUCKET != '')}}"
        run: |
          # for testing
          python -m pytest performance_validation

      # ----------------------------------------------------------------------------- #

      # ----------------- Uncomment if using Github Actions Secrets ----------------- #
      # - name: Install Python libraries
      #   run: |
      #     pip install -r requirements.txt
      #     pip install -r requirements_github_actions.txt
      #     nltkdownload=`cat <<EOF
      #     import nltk
      #     nltk.download('stopwords')
      #     nltk.download('punkt')
      #     EOF`
      #     python -c "$nltkdownload"
      #     pip install git+https://${{ secrets.TOKEN_MACHINE_USER }}@github.com/IDinsight/faqt.git@v1.0.1
      # - name: Run Unit Tests
      #   env:
      #     PG_ENDPOINT: ${{secrets.GA_PG_ENDPOINT}}
      #     PG_PASSWORD: ${{secrets.GA_PG_PASSWORD}}
      #     UD_INBOUND_CHECK_TOKEN: ${{secrets.GA_UD_INBOUND_CHECK_TOKEN}}
      #     PROMETHEUS_MULTIPROC_DIR: /tmp
      #   run: |
      #     coverage run -m pytest tests --durations=0
      #     coverage lcov --include="core_model/*"
      # - name: Run Validation Test
      #   env:
      #     VALIDATION_BUCKET: ${{secrets.VALIDATION_BUCKET}}
      #     REPO: ${{ github.repository }}
      #     BRANCH: ${{steps.vars.outputs.branch}}
      #     HASH: ${{ github.sha }}
      #     REF: ${{ github.ref }}
      #     PROMETHEUS_MULTIPROC_DIR: /tmp
      #     PG_ENDPOINT: ${{secrets.GA_PG_ENDPOINT}}
      #     PG_PASSWORD: ${{secrets.GA_PG_PASSWORD}}
      #     UD_INBOUND_CHECK_TOKEN: ${{secrets.GA_UD_INBOUND_CHECK_TOKEN}}
      #   if: "${{(env.VALIDATION_BUCKET != '')}}"
      #   run: |
      #     # for testing
      #     python -m pytest performance_validation
      # ----------------------------------------------------------------------------- #
      - name: Coveralls Test Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov
